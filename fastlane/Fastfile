default_platform(:ios)

platform :ios do
  desc "코코아팟 설치 → 테스트 → match → 키체인 셋업"
  lane :custom_release do
    # 2. 테스트 (실패해도 진행)
    scan(
      scheme: "BioLogTests",
      project: "BioLog.xcodeproj",
      fail_build: false,
      skip_build: true,
      clean: true,
      output_types: "html,junit",
      output_directory: "fastlane/test_output",
      build_for_testing: true
    )

    # 3. 인증서 및 프로비저닝 프로파일 설치
    match

    keychain_password = ENV["MATCH_KEYCHAIN_PASSWORD"]

    UI.header("🔓 Unlocking login.keychain-db…")
    begin
      unlock_output = sh("security unlock-keychain -p '#{keychain_password}' ~/Library/Keychains/login.keychain-db")
      UI.success("✅ Keychain unlocked successfully")
    rescue => ex
      UI.error("❌ Failed to unlock keychain: #{ex.message}")
      raise
    end

    UI.header("🔍 Fetching code signing identities…")
    begin
      identities = sh("security find-identity -v -p codesigning")
      UI.message("🔑 Available code signing identities:\n#{identities}")
    rescue => ex
      UI.error("⚠️ No code signing identities found or error: #{ex.message}")
      raise
    end

    UI.header("🔐 Setting key partition list for codesign…")
    begin
      sh("security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k '#{keychain_password}' ~/Library/Keychains/login.keychain-db")
      UI.success("✅ Key partition list set successfully")
    rescue => ex
      UI.error("❌ Failed to set key partition list: #{ex.message}")
    end
  end

  desc "빌드 및 TestFlight 업로드만 진행"
  lane :release_only do
    build_app(
      project: "BioLog.xcodeproj", 
      scheme: "BioLog",
      clean: true,
      silent: true,
      skip_package_pkg: true,
      export_method: "app-store",
      output_directory: "build",
      output_name: "BioLog.ipa",
      skip_codesigning: true

     # include_bitcode: false,
     # export_options: {
     #   signingStyle: "manual",
     #   uploadBitcode: false,
     #   uploadSymbols: true,
     #   compileBitcode: false,
     #   provisioningProfiles: { 
     #     "com.Wook.BioLog" => "match AppStore com.Wook.BioLog"
     #   }
    #  }
    )

    api_key = app_store_connect_api_key(
      key_id: ENV["FASTLANE_APPLE_API_KEY_KEY_ID"],
      issuer_id: ENV["FASTLANE_APPLE_API_KEY_ISSUER_ID"],
      key_content: ENV["FASTLANE_APPLE_API_KEY_CONTENT"],
      is_key_content_base64: true
    )
    UI.message("🔑 api_key: #{api_key.inspect}")

    pilot(
      api_key: api_key,
      skip_waiting_for_build_processing: true,
      wait_processing_timeout_duration: 120,
      ipa: "build/BioLog.ipa"
    )
  end
end
